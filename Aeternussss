loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()


local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local isCooldown = false
local isLooping = false
local targetUsername = ""
local targetPlayer = nil
local guiVisible = true

-- Configuración del LED rojo oscuro
local LEDConfig = {
    thickness = 4,
    baseColor = Color3.fromRGB(120, 0, 0),
    pulseColor = Color3.fromRGB(180, 0, 0),
    minBrightness = 0.3,
    maxBrightness = 0.7,
    pulseSpeed = 1.5
}

-- Función para obtener información del jugador
local function getPlayerInfo(player)
    local character = player.Character
    local humanoid = character and character:FindFirstChildOfClass("Humanoid")
    local skin = "Default"
    
    if humanoid then
        if humanoid:FindFirstChild("creator") then
            skin = humanoid.creator.Value.Name
        elseif humanoid.DisplayName ~= humanoid.Name then
            skin = humanoid.DisplayName
        end
    end
    
    return {
        Username = player.Name,
        DisplayName = player.DisplayName,
        Skin = skin,
        Player = player
    }
end

-- Función principal de ataque
local function attackTarget()
    if not targetUsername or targetUsername == "" then return end
    
    -- Buscar al jugador objetivo nuevamente por si ha cambiado
    targetPlayer = Players:FindFirstChild(targetUsername)
    
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
        local Target = targetPlayer.Character.Humanoid
        local tool = LocalPlayer.Backpack:FindFirstChild("Kawaii Revolver") 
        local damageRemote = tool and tool:FindFirstChild("DamageRemote") 

        if damageRemote then
            repeat
                if Target and Target.Health > 0 and not isCooldown then
                    isCooldown = true

                    tool.Parent = Character
                    damageRemote:FireServer(Target) 
                    tool.Parent = LocalPlayer.Backpack 

                    task.wait(0.4 + 0.00) -- Velocidad de loop modificada
                    isCooldown = false
                end
                task.wait(0.4) 
            until not Target or Target.Health <= 0 or not isLooping or not targetPlayer or not targetPlayer.Parent

            if Target and Target.Health <= 0 then
                StarterGui:SetCore("SendNotification", {
                    Title = "TARGET ELIMINADO",
                    Text = targetUsername .. " ha sido derrotado.",
                    Duration = 3
                })
            end
        else
            StarterGui:SetCore("SendNotification", {
                Title = "ERROR",
                Text = "Arma no encontrada",
                Duration = 3
            })
        end
    else
        StarterGui:SetCore("SendNotification", {
            Title = "JUGADOR NO ENCONTRADO",
            Text = targetUsername .. " no está disponible.",
            Duration = 3
        })
    end
end

-- Crear la GUI principal
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SemataryGUI"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Marco principal
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 360, 0, 260)
MainFrame.Position = UDim2.new(0.5, -180, 0.5, -130)
MainFrame.BackgroundTransparency = 1
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

-- Crear bordes LED
local LEDFrames = {
    Top = Instance.new("Frame"),
    Bottom = Instance.new("Frame"),
    Left = Instance.new("Frame"),
    Right = Instance.new("Frame")
}

for side, frame in pairs(LEDFrames) do
    frame.Name = side.."LED"
    frame.BorderSizePixel = 0
    frame.BackgroundColor3 = LEDConfig.baseColor
    frame.ZIndex = 10
    
    if side == "Top" then
        frame.Size = UDim2.new(1, 0, 0, LEDConfig.thickness)
        frame.Position = UDim2.new(0, 0, 0, 0)
    elseif side == "Bottom" then
        frame.Size = UDim2.new(1, 0, 0, LEDConfig.thickness)
        frame.Position = UDim2.new(0, 0, 1, -LEDConfig.thickness)
    elseif side == "Left" then
        frame.Size = UDim2.new(0, LEDConfig.thickness, 1, -LEDConfig.thickness*2)
        frame.Position = UDim2.new(0, 0, 0, LEDConfig.thickness)
    elseif side == "Right" then
        frame.Size = UDim2.new(0, LEDConfig.thickness, 1, -LEDConfig.thickness*2)
        frame.Position = UDim2.new(1, -LEDConfig.thickness, 0, LEDConfig.thickness)
    end
    
    frame.Parent = MainFrame
end

-- Animación de los LEDs
local LEDConnection
local function startLEDAnimation()
    if LEDConnection then LEDConnection:Disconnect() end
    
    local time = 0
    LEDConnection = RunService.Heartbeat:Connect(function(delta)
        time = time + delta
        local pulse = (math.sin(time * LEDConfig.pulseSpeed * 2 * math.pi) + 1) / 2
        local brightness = LEDConfig.minBrightness + (LEDConfig.maxBrightness - LEDConfig.minBrightness) * pulse
        local currentColor = LEDConfig.baseColor:Lerp(LEDConfig.pulseColor, pulse)
        
        for _, frame in pairs(LEDFrames) do
            frame.BackgroundColor3 = currentColor
            frame.BackgroundTransparency = 1 - brightness
        end
    end)
end

-- Contenedor interior
local ContentContainer = Instance.new("Frame")
ContentContainer.Size = UDim2.new(1, -LEDConfig.thickness*2, 1, -LEDConfig.thickness*2)
ContentContainer.Position = UDim2.new(0, LEDConfig.thickness, 0, LEDConfig.thickness)
ContentContainer.BackgroundTransparency = 1
ContentContainer.Parent = MainFrame

-- Imagen de fondo
local BackgroundImage = Instance.new("ImageLabel")
BackgroundImage.Size = UDim2.new(1, 0, 1, 0)
BackgroundImage.Position = UDim2.new(0, 0, 0, 0)
BackgroundImage.Image = "http://www.roblox.com/asset/?id=127032978653476"
BackgroundImage.ScaleType = Enum.ScaleType.Crop
BackgroundImage.BackgroundTransparency = 1
BackgroundImage.Parent = ContentContainer

-- Sombra
local DarkOverlay = Instance.new("Frame")
DarkOverlay.Size = UDim2.new(1, 0, 1, 0)
DarkOverlay.Position = UDim2.new(0, 0, 0, 0)
DarkOverlay.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DarkOverlay.BackgroundTransparency = 0.4
DarkOverlay.Parent = ContentContainer

-- Barra de título
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TitleBar.BackgroundTransparency = 0.7
TitleBar.Parent = ContentContainer

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(0.7, 0, 1, 0)
Title.Position = UDim2.new(0.15, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 50, 50)
Title.Text = "AETERNUS"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.Parent = TitleBar

-- Botones de control
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Text = "X"
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 14
CloseButton.Parent = TitleBar

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Text = "_"
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 14
MinimizeButton.Parent = TitleBar

-- Contenido principal
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, 0, 1, -30)
ContentFrame.Position = UDim2.new(0, 0, 0, 30)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = ContentContainer

-- Botón para seleccionar objetivo
local SelectTargetButton = Instance.new("TextButton")
SelectTargetButton.Size = UDim2.new(0.8, 0, 0, 35)
SelectTargetButton.Position = UDim2.new(0.1, 0, 0.2, 0)
SelectTargetButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
SelectTargetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SelectTargetButton.Text = "SELECCIONAR OBJETIVO"
SelectTargetButton.Font = Enum.Font.GothamBold
SelectTargetButton.TextSize = 14
SelectTargetButton.Parent = ContentFrame

-- Label para mostrar el objetivo seleccionado
local TargetLabel = Instance.new("TextLabel")
TargetLabel.Size = UDim2.new(0.8, 0, 0, 20)
TargetLabel.Position = UDim2.new(0.1, 0, 0.1, 0)
TargetLabel.BackgroundTransparency = 1
TargetLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetLabel.Text = "Objetivo: Ninguno"
TargetLabel.TextXAlignment = Enum.TextXAlignment.Left
TargetLabel.Font = Enum.Font.Gotham
TargetLabel.TextSize = 14
TargetLabel.TextStrokeTransparency = 0.8
TargetLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
TargetLabel.Parent = ContentFrame

-- Botón de loop
local LoopToggle = Instance.new("TextButton")
LoopToggle.Size = UDim2.new(0.8, 0, 0, 35)
LoopToggle.Position = UDim2.new(0.1, 0, 0.45, 0)
LoopToggle.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
LoopToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
LoopToggle.Text = "LOOP: OFF"
LoopToggle.Font = Enum.Font.GothamBold
LoopToggle.TextSize = 14
LoopToggle.Parent = ContentFrame

-- Botón de inicio
local StartButton = Instance.new("TextButton")
StartButton.Size = UDim2.new(0.8, 0, 0, 40)
StartButton.Position = UDim2.new(0.1, 0, 0.75, 0)
StartButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.Text = "INICIAR"
StartButton.Font = Enum.Font.GothamBold
StartButton.TextSize = 16
StartButton.Parent = ContentFrame

-- Botón flotante
local OpenButton = Instance.new("TextButton")
OpenButton.Size = UDim2.new(0, 50, 0, 50)
OpenButton.Position = UDim2.new(0, 20, 0.5, -25)
OpenButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
OpenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenButton.Text = "Z"
OpenButton.Font = Enum.Font.GothamBold
OpenButton.TextSize = 12
OpenButton.Visible = false
OpenButton.Parent = ScreenGui

-- Crear lista de jugadores
local PlayerListFrame
local function createPlayerList()
    if PlayerListFrame then PlayerListFrame:Destroy() end
    
    PlayerListFrame = Instance.new("Frame")
    PlayerListFrame.Size = UDim2.new(0.8, 0, 0.6, 0)
    PlayerListFrame.Position = UDim2.new(0.1, 0, 0.3, 0)
    PlayerListFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    PlayerListFrame.BackgroundTransparency = 0.2
    PlayerListFrame.BorderSizePixel = 0
    PlayerListFrame.Visible = false
    PlayerListFrame.Parent = ContentContainer
    
    local ScrollFrame = Instance.new("ScrollingFrame")
    ScrollFrame.Size = UDim2.new(1, 0, 1, 0)
    ScrollFrame.Position = UDim2.new(0, 0, 0, 0)
    ScrollFrame.BackgroundTransparency = 1
    ScrollFrame.BorderSizePixel = 0
    ScrollFrame.ScrollBarThickness = 5
    ScrollFrame.Parent = PlayerListFrame
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Padding = UDim.new(0, 5)
    UIListLayout.Parent = ScrollFrame
    
    -- Obtener lista de jugadores
    local players = Players:GetPlayers()
    table.sort(players, function(a, b) return a.Name:lower() < b.Name:lower() end)
    
    -- Crear botones para cada jugador
    for _, player in ipairs(players) do
        if player ~= LocalPlayer then
            local playerInfo = getPlayerInfo(player)
            
            local PlayerButton = Instance.new("TextButton")
            PlayerButton.Size = UDim2.new(1, -10, 0, 60) -- Aumentado para mostrar más info
            PlayerButton.Position = UDim2.new(0, 5, 0, 0)
            PlayerButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            PlayerButton.BackgroundTransparency = 0.5
            PlayerButton.Text = ""
            PlayerButton.AutoButtonColor = false
            PlayerButton.Parent = ScrollFrame
            
            local Avatar = Instance.new("ImageLabel")
            Avatar.Size = UDim2.new(0, 50, 0, 50)
            Avatar.Position = UDim2.new(0, 5, 0.5, -25)
            Avatar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Avatar.BorderSizePixel = 0
            Avatar.Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..player.UserId.."&width=420&height=420&format=png"
            Avatar.Parent = PlayerButton
            
            local NameLabel = Instance.new("TextLabel")
            NameLabel.Size = UDim2.new(0.6, 0, 0.3, 0)
            NameLabel.Position = UDim2.new(0, 60, 0, 5)
            NameLabel.BackgroundTransparency = 1
            NameLabel.Text = playerInfo.DisplayName .. " (@"..playerInfo.Username..")"
            NameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            NameLabel.TextXAlignment = Enum.TextXAlignment.Left
            NameLabel.Font = Enum.Font.GothamBold
            NameLabel.TextSize = 12
            NameLabel.Parent = PlayerButton
            
            local SkinLabel = Instance.new("TextLabel")
            SkinLabel.Size = UDim2.new(0.6, 0, 0.3, 0)
            SkinLabel.Position = UDim2.new(0, 60, 0.3, 5)
            SkinLabel.BackgroundTransparency = 1
            SkinLabel.Text = "Skin: " .. playerInfo.Skin
            SkinLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
            SkinLabel.TextXAlignment = Enum.TextXAlignment.Left
            SkinLabel.Font = Enum.Font.Gotham
            SkinLabel.TextSize = 11
            SkinLabel.Parent = PlayerButton
            
            local SelectButton = Instance.new("TextButton")
            SelectButton.Size = UDim2.new(0.3, 0, 0.6, 0)
            SelectButton.Position = UDim2.new(0.7, 0, 0.2, 0)
            SelectButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
            SelectButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            SelectButton.Text = "Seleccionar"
            SelectButton.Font = Enum.Font.GothamBold
            SelectButton.TextSize = 12
            SelectButton.Parent = PlayerButton
            
            SelectButton.MouseButton1Click:Connect(function()
                targetUsername = player.Name
                targetPlayer = player
                TargetLabel.Text = "Objetivo: " .. playerInfo.DisplayName .. " ("..playerInfo.Skin..")"
                PlayerListFrame.Visible = false
            end)
        end
    end
    
    -- Ajustar tamaño del scroll
    local totalHeight = #players * 65 + (#players - 1) * 5
    ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, totalHeight)
end

-- Mostrar/ocultar lista de jugadores
SelectTargetButton.MouseButton1Click:Connect(function()
    createPlayerList()
    PlayerListFrame.Visible = not PlayerListFrame.Visible
end)

-- Funcionalidad del botón LOOP
LoopToggle.MouseButton1Click:Connect(function()
    isLooping = not isLooping
    if isLooping then
        LoopToggle.Text = "LOOP: ON"
        LoopToggle.BackgroundColor3 = Color3.fromRGB(0, 80, 0)
    else
        LoopToggle.Text = "LOOP: OFF"
        LoopToggle.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
    end
end)

-- Funcionalidad del botón INICIAR
StartButton.MouseButton1Click:Connect(function()
    if targetUsername == "" then
        StarterGui:SetCore("SendNotification", {
            Title = "ERROR",
            Text = "Selecciona un objetivo primero",
            Duration = 3
        })
        return
    end
    
    if isLooping then
        task.spawn(function()
            while isLooping and targetUsername ~= "" do
                pcall(attackTarget)
                task.wait(0.4 + 0.00) -- Velocidad de loop modificada
            end
        end)
    else
        pcall(attackTarget)
    end
end)

-- Función para manejar cuando un jugador abandona el juego
local function onPlayerRemoved(player)
    if player.Name == targetUsername then
        StarterGui:SetCore("SendNotification", {
            Title = "OBJETIVO DESCONECTADO",
            Text = targetUsername .. " ha abandonado el juego.",
            Duration = 3
        })
        
        -- No limpiamos targetUsername para que si vuelve, siga siendo el objetivo
        targetPlayer = nil
    end
end

-- Función para manejar cuando un jugador entra al juego
local function onPlayerAdded(player)
    if player.Name == targetUsername then
        targetPlayer = player
        StarterGui:SetCore("SendNotification", {
            Title = "OBJETIVO RECONECTADO",
            Text = targetUsername .. " ha vuelto al juego.",
            Duration = 3
        })
    end
end

-- Conectar eventos de jugadores
Players.PlayerRemoving:Connect(onPlayerRemoved)
Players.PlayerAdded:Connect(onPlayerAdded)

-- Funciones para mostrar/ocultar GUI
local function toggleGUI(visible)
    guiVisible = visible
    if visible then
        MainFrame.Visible = true
        OpenButton.Visible = false
        local tween = TweenService:Create(
            MainFrame,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad),
            {Position = UDim2.new(0.5, -180, 0.5, -130)}
        )
        tween:Play()
    else
        if PlayerListFrame then PlayerListFrame.Visible = false end
        local tween = TweenService:Create(
            MainFrame,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad),
            {Position = UDim2.new(0.5, -180, 1.5, 0)}
        )
        tween:Play()
        tween.Completed:Connect(function()
            MainFrame.Visible = false
            OpenButton.Visible = true
        end)
    end
end

CloseButton.MouseButton1Click:Connect(function()
    toggleGUI(false)
end)

MinimizeButton.MouseButton1Click:Connect(function()
    toggleGUI(false)
end)

OpenButton.MouseButton1Click:Connect(function()
    toggleGUI(true)
end)

-- Función para arrastrar la ventana
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Iniciar animación de los LEDs
startLEDAnimation()

-- Inicializar GUI
toggleGUI(true)
